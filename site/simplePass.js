var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{Z:()=>w});const r=["length","lowercase","uppercase","numbers","punctuation","w_beginning","w_end","w_between","w_between_limit","w_end_required","w_beginning_required","excludeCharacters","repeatingCharacter","repeatingCharacter_limit","customRepeatingCharacters","lowercase_supplement","uppercase_supplement","symbols_supplement"],n={passwordLengthMin:3,passwordLengthMax:256,excludeCharactersMin:1,excludeCharactersMax:10,defaultPasswordLength:8,possibleWhitespaceCharacterOffset:4,whitespaceBetweenMax:function(){const e=this.passwordLengthMax-this.possibleWhitespaceCharacterOffset;return e>=1?e:0},whitespaceBetweenMin:function(){return this.passwordLengthMax-this.possibleWhitespaceCharacterOffset>=1?1:0},errorMessagePrefix:"-=sP",templateMessageMarker:"~"},i=["lowercase","uppercase","numbers","punctuation","w_beginning","w_end","w_between","excludeCharacters","lowercase_supplement","uppercase_supplement","symbols_supplement"],a=["lowercase","uppercase","numbers","punctuation","lowercase_supplement","uppercase_supplement","symbols_supplement"];function s(e,t,r=n.templateMessageMarker){let i=0;for(;e.includes(r);){if(t[i]===r)throw new Error(`${n.errorMessagePrefix}-cM_E.1: A 'Message Replacement', "${t[i]}", contained a 'Message Marker', "${r}".`);e=e.replace(r,t[i++]??t[t.length-1])}return e}var o;!function(e){e.invalidModifier="~-~_E.~: Invalid Modifier. The password modifier must be a valid JavaScript Object or JavaScript 'FormData' Object.",e.toManyAttributes="~-~_E.~: To Many Attributes. The requested password may only contain ~ amount of attributes, ~ attributes were selected.",e.nonGenerableCharacterType="~-~_E.~: Non Generable Character Type. Attempted to generate a character of type ~",e.invalidAttributeType="~-~_.~: InvalidAttribute Type. Attribute ~ is supposed to be of type ~",e.outOfBoundsAttributeValue="~-~_E.~: Out Of Bounds Attribute Type. Attribute type ~ is out of its value bounds.",e.missingRequiredAttribute="~-~_E.~: Attribute Missing Required. The attribute '~' requires attribute '~' to be set before it can be used.",e.missingRequiredAttributes="~-~_E.~: Missing Required Attributes. The Password Modifier must contain one of the following attributes ~.",e.excludeCharactersContainedWhitespace="~-~_E.~: 'Exclude Characters' contained whitespace."}(o||(o={}));const c=o,h=["w_beginning","w_end","w_between","w_end_required","w_beginning_required"];function l(e){let t,r=e.length;for(;0!=r;)t=Math.floor(Math.random()*r),r--,[e[r],e[t]]=[e[t],e[r]];return e}const p={lowercase:{min:97,max:122},uppercase:{min:65,max:90},numbers:{min:48,max:57},punctuation:{min:33,max:126,range:[[33,47],[58,64],[91,96],[123,126]]},whitespace:{single:32},lowercase_supplement:{min:223,max:255,range:[[233,246],[248,255]]},uppercase_supplement:{min:192,max:222,range:[[192,214],[216,222]]},symbols_supplement:{min:161,max:247,range:[[161,191],[215],[247]]}};function u(e,t){const r=self.crypto.getRandomValues(new Uint8Array(1))[0];if(e.charCodeOptions?.excludeCharacters&&e.charCodeOptions.excludeCharacters.includes(String.fromCharCode(r)))return u(e);if(t){if(t?.beginning){if(e.charCodeOptions?.whitespaceOptions?.includes("w_beginning")&&32===r)return r;if(32===r)return u(e,t)}if(t?.end){if(e.charCodeOptions?.whitespaceOptions?.includes("w_end")&&32===r)return r;if(32===r)return u(e,t)}}if(!p[e.charType])throw new Error(s(c.nonGenerableCharacterType,[n.errorMessagePrefix,"gCC","1",e.charType]));{if(p[e.charType]?.single&&p[e.charType]?.single===r)return r;const t=p[e.charType]?.min,n=p[e.charType]?.max,i=p[e.charType]?.range;if(i){if(t&&n&&r>=t&&r<=n){if(r===t||r===n)return r;for(let e=0;e<i.length;e++){if(i[e][0]&&i[e][1]&&r>=i[e][0]&&r<=i[e][1])return r;if(i[e][0]&&r===i[e][0])return r}}}else if(t&&n&&r>=t&&r<=n)return r}return u(e,t)}function g(e){const t=[];return e.split("").forEach((e=>{t.includes(e)||t.push(e)})),t.join("")}function f(e,t){let r=e.slice(0,1),n=e.slice(1,e.length-1),i=e.slice(e.length-1,e.length);if(t.customCharacterSet){const a=[];n.split("").forEach((e=>{a.push(e)})),"string"==typeof t.customCharacterSet?t.customCharacterSet.split("").forEach((e=>{a.push(e),a.push(e)})):t.customCharacterSet.forEach((e=>{let t=parseInt(e[1]);for(;t--;)a.push(e[0])})),t.preservations?.beginning||(a.push(r),r=""),t.preservations?.end||(a.push(i),i=""),e=r+l(a).join("")+i}else if(t.repeatingSetCount&&t.repeatingSetCount>1){let a=l(e.split(""));a=g(a.join("")).split(""),n=g(n);for(let e=0;e<t.repeatingSetCount&&a[e];e++)n+=a[e];e=r+l(n.split("")).join("")+i}else n+=l(e.split(""))[0],e=r+l(n.split("")).join("")+i;return e}function w(e={length:n.defaultPasswordLength,lowercase:!0}){if(!e||"object"!=typeof e)throw new Error(s(c.invalidModifier,[n.errorMessagePrefix,"M","1"]));let t="",o="",p=!1,g=!1;!function(e){let t=Object.keys(e).filter((e=>i.includes(e))).length;if(e.repeatingCharacter)if(e.customRepeatingCharacters){if("string"!=typeof e.customRepeatingCharacters)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","15","string or list"]));if(e.customRepeatingCharacters=e.customRepeatingCharacters.trim(),e.customRepeatingCharacters.includes(" ")){const r=[];e.customRepeatingCharacters.split(" ").forEach((e=>{if(e.includes("\\")){const t=e.slice(1,2),n=(e=e.replace(t,"")).split(":");if(n.length>2)throw new Error('Custom Repeating Characters contain more than one ":" (colon) literal.');r.push([t,n[1]])}else{let t=e.split(":");if(t.length>2)throw new Error('Custom Repeating Characters contain more than one ":" (colon) literal.');r.push([t[0],t[1]])}})),e.customRepeatingCharacters=r,e.customRepeatingCharacters.forEach((e=>{(!e[1]||parseInt(e[1])<=1)&&(e[1]="2"),t+=parseInt(e[1])}))}else if(e.customRepeatingCharacters.includes(":")){const r=[];if(e.customRepeatingCharacters.includes("\\")){const t=e.customRepeatingCharacters.slice(1,2);e.customRepeatingCharacters=e.customRepeatingCharacters.replace(t,"");const n=e.customRepeatingCharacters.split(":");if(n.length>2)throw new Error('Custom Repeating Characters contain more than one ":" (colon) literal.');r.push([t,n[1]])}else{const t=e.customRepeatingCharacters.split(":");if(t.length>2)throw new Error('Custom Character Repeats contained an unescaped ":" (colon).');r.push([t[0],t[1]])}e.customRepeatingCharacters=r,e.customRepeatingCharacters.forEach((e=>{(!e[1]||parseInt(e[1])<=1)&&(e[1]="2"),t+=parseInt(e[1])}))}else t+=2*e.customRepeatingCharacters.length}else if(e.repeatingCharacter_limit){if("number"!=typeof e.repeatingCharacter_limit&&"string"!=typeof e.repeatingCharacter_limit)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","13","repeatingCharacter_limit","number or string"]));if("string"==typeof e.repeatingCharacter_limit&&(e.repeatingCharacter_limit=parseInt(e.repeatingCharacter_limit)),e.repeatingCharacter_limit<1||e.repeatingCharacter_limit>255)throw new Error(s(c.outOfBoundsAttributeValue,[n.errorMessagePrefix,"vM","14","repeatingCharacter_limit"]));if(e.length<2*e.repeatingCharacter_limit)throw new Error("The password can not contain the requested amount of repeating characters.");t+=e.repeatingCharacter_limit}else t++;if(!e.length||"string"!=typeof e.length&&"number"!=typeof e.length)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","1","length","string or number"]));if("string"==typeof e.length){const t=parseInt(e.length);if(t>n.passwordLengthMax||t<n.passwordLengthMin)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","1","length","string or number"]))}else if(e.length>n.passwordLengthMax||e.length<n.passwordLengthMin)throw new Error(s(c.outOfBoundsAttributeValue,[n.errorMessagePrefix,"vM","2","length"]));if(t>e.length)throw new Error(s(c.toManyAttributes,[n.errorMessagePrefix,"vM","3",`${e.length}`,`${t}`]));if(e.w_between){if(!e.w_between_limit)throw new Error(s(c.missingRequiredAttribute,[n.errorMessagePrefix,"vM","11","w_between_limit","w_between"]));if("string"!=typeof e.w_between_limit&&"number"!=typeof e.w_between_limit)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","4","w_between_limit","string or number"]));if("string"==typeof e.w_between_limit){const t=parseInt(e.w_between_limit);if(t>n.whitespaceBetweenMax()||t<n.whitespaceBetweenMin())throw new Error(s(c.outOfBoundsAttributeValue,[n.errorMessagePrefix,"vM","5","w_between_limit"]))}else if(e.w_between_limit>n.whitespaceBetweenMax()||e.w_between_limit<n.whitespaceBetweenMin())throw new Error(s(c.outOfBoundsAttributeValue,[n.errorMessagePrefix,"vM","6","w_between_limit"]))}if(!Object.keys(e).some((function(e){return a.includes(e)})))throw new Error(s(c.missingRequiredAttributes,[n.errorMessagePrefix,"vM","7",a.toString()]));if(e.excludeCharacters){if("string"!=typeof e.excludeCharacters)throw new Error(s(c.invalidAttributeType,[n.errorMessagePrefix,"vM","8","excludeCharacters","string"]));if(!e.excludeCharacters.length&&e.excludeCharacters.length<=0)throw new Error(s(c.outOfBoundsAttributeValue,[n.errorMessagePrefix,"vM","9","excludeCharacters"]));if(new RegExp("/[s]/g").test(e.excludeCharacters))throw new Error(s(c.excludeCharactersContainedWhitespace,[n.errorMessagePrefix,"vM","10"]))}}(e=function(e){const t={length:n.defaultPasswordLength};function i([e,n]){r.includes(e)&&(!n||"string"!=typeof n&&"number"!=typeof n&&"boolean"!=typeof n||(t[e]=n))}if(e instanceof FormData)for(let[t,r]of e.entries())i([t,r]);else for(const[t,r]of Object.entries(e))i([t,r]);return t}(e));const w=Object.keys(e).filter((e=>a.includes(e))),d=Object.keys(e).filter((e=>h.includes(e)));let m=e.length-2;if(e.repeatingCharacter&&(e.customRepeatingCharacters?"string"!=typeof e.customRepeatingCharacters?e.customRepeatingCharacters.forEach((e=>{m-=parseInt(e[1])})):m-=2*e.customRepeatingCharacters.length:e.repeatingCharacter_limit?m-=e.repeatingCharacter_limit:m--),m<=-1)throw new Error("The password length can not contain the selected amount of characters");if(e.w_between&&e.w_between_limit&&(m-=e.w_between_limit),w.length>1){let r=[];r=r.concat(l(w));let n="";for(e.w_beginning&&e.w_beginning_required?(t+=" ",p=!0):(n=r.pop(),n&&(t+=String.fromCharCode(u({charType:n,charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}},{beginning:!0}))));o.length<m;)n=r.pop(),!n&&r.length<=0&&(r=r.concat(l(w)),n=r.pop()),n&&(o+=String.fromCharCode(u({charType:n,charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}})));if(e.w_between&&e.w_between_limit)for(;e.w_between_limit--;)o+=" ";if(t+=l(o.split("")).join(""),e.w_end&&e.w_end_required?(t+=" ",g=!0):(r.length<=0&&!n&&(r=r.concat(l(w))),n=r.pop(),n&&(t+=String.fromCharCode(u({charType:n,charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}},{end:!0})))),e.repeatingCharacter&&(t=f(t,{repeatingSetCount:e.repeatingCharacter_limit,customCharacterSet:e.customRepeatingCharacters,preservations:{beginning:p,end:g}}),t.length<e.length)){let i=t.slice(0,1),a=t.slice(1,t.length-1),s=t.slice(t.length-1,t.length);for(;a.length<e.length-2;)if((r.length<=0||!n)&&(r=r.concat(l(w))),n=r.pop(),n){const t=String.fromCharCode(u({charType:n,charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}}));a+=t,a.length+1<=e.length-2&&(a+=t)}t=i+l(a.split("")).join("")+s}}else{for(e.w_beginning&&e.w_beginning_required?(t+=" ",p=!0):t+=String.fromCharCode(u({charType:w[0],charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}},{beginning:!0}));o.length<m;)o+=String.fromCharCode(u({charType:w[0],charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}}));if(e.w_between&&e.w_between_limit)for(;e.w_between_limit--;)o+=" ";if(t+=l(o.split("")).join(""),e.w_end&&e.w_end_required?(t+=" ",g=!0):t+=String.fromCharCode(u({charType:w[0],charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}},{end:!0})),e.repeatingCharacter&&(t=f(t,{repeatingSetCount:e.repeatingCharacter_limit,customCharacterSet:e.customRepeatingCharacters,preservations:{beginning:p,end:g}}),t.length<e.length)){let r=t.slice(0,1),n=t.slice(1,t.length-1),i=t.slice(t.length-1,t.length);for(;n.length<e.length-2;){const t=String.fromCharCode(u({charType:w[0],charCodeOptions:{whitespaceOptions:d,excludeCharacters:e.excludeCharacters}}));n+=t,n.length+1<=e.length-2&&(n+=t)}t=r+l(n.split("")).join("")+i}}return t}var d=t.Z;export{d as default};